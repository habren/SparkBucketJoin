apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'nebula.provided-base'

group = 'com.jasongj.spark-sql'
version = '1.0'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

ext {
//    hiveVersion = '2.1.1'
    hiveVersion = '1.2.1'
    hadoopVersion = '2.7.3'
    sparkVersion = '2.1.0'
//    parquetVersion = '1.9.0'
//    parquetVersion = '1.8.1'
    parquetVersion = '1.7.0'
//    avroVersion = '1.8.1'
    avroVersion = '1.7.7'
    kafkaVersion = '0.10.1.1'
    log4j2Version = '2.7'
}

repositories {
     maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
     maven { url "http://repo.maven.apache.org/maven2" }
     maven { url 'http://repo.spring.io/plugins-release' }
}

//plugins {
//    id 'nebula.provided-base' version '3.0.3' // if you want provided-base
//}

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
    }
}

configurations {

//    sparkProvided
//    sparkProvided.extendsFrom compile
//    provided.extendsFrom runtime

    /*
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    */

    all*.exclude group: 'ch.qos.logback'
    all*.exclude module: 'slf4j-log4j12'
    all*.exclude group: 'org.pentaho'
    all*.exclude module: 'apache-curator'
    all*.exclude group: 'org.eclipse.jetty.aggregate'
    all*.exclude group: 'org.eclipse.jetty.orbit'
}


jar {
    manifest {
        attributes "Main-Class" : "com.jasongj.spark.driver.SparkBucketJoin"
    }

    baseName = project.name + '-with-dependencies'
    zip64 = true
    from {
        /*(configurations.compile - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }*/
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*"
        exclude "META-INF/services/*"
        exclude "META-INF/maven/*"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
    }
}


//task listJars(description: 'Display all compile jars.') {
//    doLast{
//        (configurations.compile - configurations.sparkProvided).each { File file -> println file.name }
//    }
//}

task createWrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }

//        compileClasspath += configurations.sparkProvided
    }
}

//idea {
//    module {
//        scopes.PROVIDED.plus += [configurations.provided]
//    }
//}


dependencies {

    compile(
//            [group: 'commons-cli', name: 'commons-cli', version:'1.3.1'],
            [group: 'org.apache.kafka', name: 'kafka_2.11', version: kafkaVersion],
            [group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion],
            [group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.6.5'],
            [group: 'org.apache.hive', name: 'hive-metastore', version: hiveVersion],
            [group: 'org.apache.hive', name: 'hive-serde', version: hiveVersion],
            [group: 'org.apache.hive', name: 'hive-common', version: hiveVersion],
            [group: 'org.apache.hive', name: 'hive-service', version: hiveVersion],
            [group: 'org.apache.hive', name: 'hive-shims', version: hiveVersion],
            [group: 'org.apache.hive', name: 'hive-jdbc', version: hiveVersion],
            [group: 'org.apache.hive', name: 'hive-exec', version: hiveVersion],
            [group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoopVersion],
            [group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: hadoopVersion],
//            [group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoopVersion],
            [group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoopVersion],
            [group: 'org.apache.hadoop', name: 'hadoop-annotations', version: hadoopVersion],
            [group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoopVersion],
            [group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoopVersion],
            [group: 'org.apache.spark', name: 'spark-core_2.11', version: sparkVersion],
            [group: 'org.apache.spark', name: 'spark-sql_2.11', version: sparkVersion],
            [group: 'org.apache.spark', name: 'spark-streaming_2.11', version: sparkVersion],
            [group: 'org.apache.spark', name: 'spark-streaming-kafka-0-10_2.11', version: sparkVersion],
            [group: 'org.apache.spark', name: 'spark-streaming-kafka-0-8_2.11', version: sparkVersion]
    )

    compile(
            [group: 'commons-cli', name: 'commons-cli', version:'1.2'],
            [group: 'org.projectlombok', name: 'lombok', version:'1.16.12'],
            [group: 'org.slf4j', name: 'slf4j-api', version:'1.7.22'],
            [group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2Version],
            [group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2Version],
            [group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2Version],
            [group: 'com.google.guava', name: 'guava', version: '16.0.1'],
            [group: 'org.apache.parquet', name: 'parquet-column', version: parquetVersion],
            [group: 'org.apache.parquet', name: 'parquet-hadoop', version: parquetVersion],
            [group: 'org.apache.parquet', name: 'parquet-common', version: parquetVersion],
            [group: 'org.apache.parquet', name: 'parquet-jackson', version: parquetVersion],
            [group: 'org.apache.parquet', name: 'parquet-avro', version: parquetVersion],
            [group: 'org.apache.avro', name: 'avro', version: avroVersion]
    )

//    compile(group: 'org.apache.avro', name:'avro-tools', version: avroVersion) {
////        exclude group: 'org.slf4j', module: 'slf4j-simple'
////        exclude group: 'org.slf4j', module: 'sslf4j-api'
//    }

}